import tkinter as tk

livros_por_genero = {}

def add_genero():
    genero = entry_genero.get()
    if genero:
        livros_por_genero[genero] = []
        label_status.config(text=f"Gênero '{genero}' adicionado.")
        entry_genero.delete(0, tk.END)
    else:
        label_status.config(text="Digite um nome de gênero válido.")

def add_livro():
    genero = entry_genero.get()
    titulo = entry_titulo.get()
    autor = entry_autor.get()
    if genero and titulo and autor:
        livro = (titulo, autor)
        if genero in livros_por_genero:
            livros_por_genero[genero].append(livro)
            label_status.config(text=f"Livro '{titulo}' adicionado ao gênero '{genero}'.")
            entry_titulo.delete(0, tk.END)
            entry_autor.delete(0, tk.END)
        else:
            label_status.config(text=f"Gênero '{genero}' não encontrado.")
    else:
        label_status.config(text="Preencha todos os campos.")

def remover():
    genero = entry_genero.get()
    if genero in livros_por_genero:
        if livros_por_genero[genero]:
            livro_removido = livros_por_genero[genero].pop()
            label_status.config(text=f"Livro '{livro_removido[0]}' removido do gênero '{genero}'.")
        else:
            label_status.config(text=f"Nenhum livro encontrado no gênero '{genero}'.")
    else:
        label_status.config(text=f"Gênero '{genero}' não encontrado.")

def topo():
    genero = entry_genero.get()
    if genero in livros_por_genero:
        if livros_por_genero[genero]:
            livro_topo = livros_por_genero[genero][-1]
            label_status.config(text=f"Livro do topo do gênero '{genero}': Título: {livro_topo[0]}, Autor: {livro_topo[1]}.")
        else:
            label_status.config(text=f"Nenhum livro encontrado no gênero '{genero}'.")
    else:
        label_status.config(text=f"Gênero '{genero}' não encontrado.")

def total():
    genero = entry_genero.get()
    if genero in livros_por_genero:
        total_livros = len(livros_por_genero[genero])
        label_status.config(text=f"Total de livros no gênero '{genero}': {total_livros}.")
    else:
        label_status.config(text=f"Gênero '{genero}' não encontrado.")

janela = tk.Tk()
janela.title("Biblioteca de livros")
janela.configure(bg="white")

label_genero = tk.Label(janela, text="Gênero:",bg= "orange", fg= "white")
entry_genero = tk.Entry(janela)
botao_add_genero = tk.Button(janela, text="Adicionar Gênero", command=add_genero,bg= "orange", fg= "white")

label_genero.place(x=10, y=10)
entry_genero.place(x=70, y=10)
botao_add_genero.place(x=200, y=10)

label_titulo = tk.Label(janela, text="Título:",bg= "orange", fg= "white")
entry_titulo = tk.Entry(janela)
label_autor = tk.Label(janela, text="Autor:",bg= "orange", fg= "white")
entry_autor = tk.Entry(janela)
botao_add_livro = tk.Button(janela, text="Adicionar Livro", command=add_livro,bg= "orange", fg= "white")
botao_remover = tk.Button(janela, text="Remover Livro", command=remover,bg= "orange", fg= "white")
botao_topo = tk.Button(janela, text="Livro do Topo", command=topo,bg= "orange", fg= "white")
botao_total = tk.Button(janela, text="Total de Livros", command=total,bg= "orange", fg= "white")

label_titulo.place(x=10, y=50)
entry_titulo.place(x=70, y=50)
label_autor.place(x=10, y=80)
entry_autor.place(x=70, y=80)
botao_add_livro.place(x=200, y=50)
botao_remover.place(x=200, y=80)
botao_topo.place(x=200, y=110)
botao_total.place(x=200, y=140)

label_status = tk.Label(janela, text="", bg= "white", fg= "orange")
label_status.place(x=10, y=200)

janela.mainloop()
